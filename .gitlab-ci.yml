variables:
  DOCKER_IMAGE_NAME: ${DOCKER_USERNAME}/devscript

stages:
  - build
  - deploy

build-production:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - echo -n ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin
  script:
    # fetches the latest image (not failing if image is not found)
    - docker pull $DOCKER_IMAGE_NAME:latest || true
    - docker build --pull --cache-from $DOCKER_IMAGE_NAME:latest -t $DOCKER_IMAGE_NAME:$CI_COMMIT_SHA -t $DOCKER_IMAGE_NAME:latest .
    - docker push $DOCKER_IMAGE_NAME:latest
  after_script:
    - docker logout
  only:
    - main

build-staging:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - echo -n ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin
  script:
    # fetches the latest image (not failing if image is not found)
    - docker pull $DOCKER_IMAGE_NAME:staging-latest || true
    - docker build --pull --cache-from $DOCKER_IMAGE_NAME:staging-latest -t $DOCKER_IMAGE_NAME:$CI_COMMIT_SHA -t $DOCKER_IMAGE_NAME:staging-latest .
    - docker push $DOCKER_IMAGE_NAME:staging-latest
  after_script:
    - docker logout
  only:
    - staging

trigger-job:
  stage: deploy
  inherit:
    variables: false
  variables:
    UPSTREAM_BRANCH: $CI_COMMIT_REF_NAME
  trigger: devscript/snippet-manager-deploy
  only:
    - main
    - staging
